/* 
 * Health monitoring of selective interfaces based on its description and selective KPIs.
 * Using this playbook any one of the kpi (in-octets, out-octets, in-pkts, out-pkts, in-unicast-pkts,
 * out-unicast-pkts, in-errors, out-errors, carrier-transitions) can be monitored.
 * ****Seperate playbook instances to be created for each interface kpi****
 */ 
iceberg {
    topic interface.monitor {
        description "This topic monitors only interfaces based on its description";
        synopsis "Interface KPI monitor based on description";
        rule check-interface-health {
            /*
             * unique identifier of the rule is an interface name
             */
            keys interface-name;
            synopsis "Interface KPI monitor based on description";
            description "Using this rule any one of the field(in and out errors, packets, octets, flaps can be monitored).";
            /*
             * sensor configuration to get data from network devices
             */
            sensor interfaces {
                synopsis "Interface open-config sensor definition";
                description "/interfaces open-config sensor to collect telemetry data from network device";
                open-config {
                    sensor-name /interfaces/;
                    frequency 30s;
                }
            }
            /*
             *  Fields defined using sensor path
             */
            field description {
                sensor interfaces {
                    path /interfaces/interface/state/description;
                }
                type string;
                description "This field is for interface description";
            }
            field interface-name {
                sensor interfaces {
                    path "/interfaces/interface/@name";
                }
                type string;
                description "This field is interface name";
            }
            field stats-value {
                sensor interfaces {
                    path "/interfaces/interface/state/counters/{{stats_name}}";
                }
                type integer;
                description "This field is for monitored field's stats value";
            }
            /*
             * Fields defined with variables and constant values
             */
            field medium-threshold {
                constant {
                    value "{{medium_threshold}}";
                }
                type integer;
                description "This field is for monitored field's medium threshold";
            }
            field high-threshold {
                constant {
                    value "{{high_threshold}}";
                }
                type integer;
                description "This field is for monitored field's high threshold";
            }
            field stats-name {
                constant {
                    value "{{stats_name}}";
                }
                type string;
                description "This field is for monitored field's stats name";
            }
            field user-description {
                constant {
                    value "{{interface_description}}";
                }
                type string;
                description "This field is for user entered interface description";
            }
            /*
             * When an interface input octets($stats-value) count crosses high threshold then sends anomaly notification and sets color
             * to red. When count is below low threshold then sets color to green. When count is between low and high threshold then sends anomaly
             * notification and sets color to yellow.
             */
            trigger interface-stats {
                synopsis "interface statistics kpi";
                description "Sets health based on interface statistics threshold.";
                term is-interface-description-not-matching {
                    when {
                        does-not-match-with "$description" "$user-description";
                    }
                }
                term is-interface-stats-crossing-high-threshold {
                    when {
                        min-rate-of-increase "$stats-value" {
                            rate "$high-threshold";
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "$stats-name of $interface-name($description) is:$stats-value is above high threshold($high-threshold)";
                        }
                    }
                }
                term is-interface-stats-crossing-medium-threshold {
                    when {
                        min-rate-of-increase "$stats-value" {
                            rate "$medium-threshold";
                            time-range 60s;
                        }
                    }
                    then {
                        status {
                            color yellow;
                            message "$stats-name of $interface-name($description) is:$stats-value is in medium range($medium-threshold)";
                        }
                    }
                }
                term interface-stats-normal {
                    then {
                        status {
                            color green;
                            message "$stats-name of $interface-name($description) is:$stats-value is normal";
                        }
                    }
                }
            }
            /*
             * Variables with default values which can be altered while deploying playbook instance
             */
            variable high_threshold {
                value 800000000;
                description "Enter in octets high threshold value. Default value for 1G interface is 800000000. Modify default value for 10G is 8000000000 and 100G is 80000000000";
                type int;
            }
            variable interface_description {
                value "Core|Access";
                description "Enter interfaces description using regular expression";
                type string;
            }
            variable medium_threshold {
                value 500000000;
                description "Enter in octets medium threshold value. Default value for 1G interface is 500000000. Modify default value for 10G is 5000000000 and 100G is 50000000000";
                type int;
            }
            variable stats_name {
                value "in-octets";
                description "Enter any one of statistics name(in-octets, out-octets, in-pkts, out-pkts, in-unicast-pkts, out-unicast-pkts, in-errors, out-errors, carrier-transitions) to monitor. Create seperate instance for each kpi";
                type string;
            }
        }
    }
}
