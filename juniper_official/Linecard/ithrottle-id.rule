iceberg {
    topic linecard {
        description "Rules relevant to metrics on the line card";
        synopsis "Throttle statistics analyzer";
        rule check-ithrottle-statistics {
            keys [ id target ];
            synopsis "Throttle statistics analyzer";
            description "Monitors throttle statistics such as adjacency ups and downs, starts and stops, disables and enables";
            sensor ithrottle-id {
                synopsis "iAgent sensor definition";
                description "Netconf command show ithrottle iAgent sensor to collect telemetry data from network device";
                iAgent {
                    file ithrottle.yml;
                    table IthrottleIDTable;
                    frequency 10s;
                }
            }
            field ithrottle-higher-rate-threshold {
                constant {
                    value "{{FPC_iThrottle_Higher_Rate}}";
                }
                description "This field is for ithrottle higher threshold";
            }
            field ithrottle-lower-rate-threshold {
                constant {
                    value "{{FPC_iThrottle_Lower_Rate}}";
                }
                description "This field is forithrottle lower threshold";
            }
            trigger adjacency-down {
                synopsis "Adjacency down kpi";
                description "Sets health based on adjacency down";
                term is-adjacency-down-increasing {
                    when {
                        min-rate-of-increase "$AdjDown" { ## Warning: 'min-rate-of-increase' is deprecated
                            rate "$ithrottle-higher-rate-threshold";
                            time-range 50s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Adjaceny down ($AdjDown) increasing rapidly";
                        }
                    }
                }
                term adjacency-down-not-increasing {
                    then {
                        status {
                            color green;
                        }
                    }
                }
            }
            trigger adjacency-up {
                synopsis "Adjacency up kpi";
                description "Sets health based on adjacency up";
                term is-adjacency-up-increasing {
                    when {
                        min-rate-of-increase "$AdjUp" { ## Warning: 'min-rate-of-increase' is deprecated
                            rate "$ithrottle-higher-rate-threshold";
                            time-range 50s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Adjaceny up ($AdjUp) increasing rapidly";
                        }
                    }
                }
                term adjacency-up-not-increasing {
                    then {
                        status {
                            color green;
                        }
                    }
                }
            }
            trigger checks {
                synopsis "ithrottle rate of increase kpi";
                description "Sets health based on ithrottle rate of increaes";
                term are-checks-increasing {
                    when {
                        min-rate-of-increase "$Checks" { ## Warning: 'min-rate-of-increase' is deprecated
                            rate "$ithrottle-lower-rate-threshold";
                            time-range 50s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Checks ($Checks) increasing";
                        }
                    }
                }
                term checks-not-increasing {
                    then {
                        status {
                            color green;
                        }
                    }
                }
            }
            trigger disables {
                synopsis "iThrottle disable kpi";
                description "Sets health based on ithrottle disable";
                term are-disables-increasing {
                    when {
                        min-rate-of-increase "$Disables" { ## Warning: 'min-rate-of-increase' is deprecated
                            rate "$ithrottle-higher-rate-threshold";
                            time-range 50s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Disables ($Disables) increasing rapidly";
                        }
                    }
                }
                term disable-not-increasing {
                    then {
                        status {
                            color green;
                        }
                    }
                }
            }
            trigger enables {
                synopsis "iThrottle enable kpi";
                description "Sets health based on ithrottle enable";
                term are-enables-increasing {
                    when {
                        min-rate-of-increase "$Enables" { ## Warning: 'min-rate-of-increase' is deprecated
                            rate "$ithrottle-higher-rate-threshold";
                            time-range 50s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Enables ($Enables) increasing rapidly";
                        }
                    }
                }
                term enables-not-increasing {
                    then {
                        status {
                            color green;
                        }
                    }
                }
            }
            trigger starts {
                synopsis "iThrottle starts kpi";
                description "Sets health based on ithrottle starts";
                term are-starts-increasing {
                    when {
                        min-rate-of-increase "$Starts" { ## Warning: 'min-rate-of-increase' is deprecated
                            rate "$ithrottle-lower-rate-threshold";
                            time-range 50s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Starts ($Starts) increasing";
                        }
                    }
                }
                term starts-are-not-increasing {
                    then {
                        status {
                            color green;
                        }
                    }
                }
            }
            trigger stops {
                synopsis "iThrottle stops kpi";
                description "Sets health based on ithrottle stops";
                term are-stops-increasing {
                    when {
                        min-rate-of-increase "$Stops" { ## Warning: 'min-rate-of-increase' is deprecated
                            rate "$ithrottle-lower-rate-threshold";
                            time-range 50s;
                        }
                    }
                    then {
                        status {
                            color red;
                            message "Stops ($Stops) increasing";
                        }
                    }
                }
                term stops-not-increasing {
                    then {
                        status {
                            color green;
                        }
                    }
                }
            }
            variable FPC_iThrottle_Higher_Rate {
                value 5;
                description "Linecard interrupt throttle HIGH threshold value";
                type int;
            }
            variable FPC_iThrottle_Lower_Rate {
                value 1;
                description "Linecard interrupt throttle LOW threshold value";
                type int;
            }
        }
    }
}
